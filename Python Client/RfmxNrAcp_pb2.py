# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: RfmxNrAcp.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
import RfmxNrAcpSubBlock_pb2 as RfmxNrAcpSubBlock__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fRfmxNrAcp.proto\x12\x10multi_site_instr\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x17RfmxNrAcpSubBlock.proto\"\xd4\x0f\n\x05NrAcp\x12\x34\n\x10\x41llTracesEnabled\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12U\n\x17\x41mplitudeCorrectionType\x18\x02 \x01(\x0e\x32\x34.multi_site_instr.RFmxNRMXAcpAmplitudeCorrectionType\x12\x33\n\x0e\x41veragingCount\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12G\n\x10\x41veragingEnabled\x18\x04 \x01(\x0e\x32-.multi_site_instr.RFmxNRMXAcpAveragingEnabled\x12\x41\n\rAveragingType\x18\x05 \x01(\x0e\x32*.multi_site_instr.RFmxNRMXAcpAveragingType\x12W\n\x18\x43hannelConfigurationType\x18\x06 \x01(\x0e\x32\x35.multi_site_instr.RFmxNRMXAcpChannelConfigurationType\x12<\n\x16\x46\x61rIFOutputPowerOffset\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x30\n\nFftOverlap\x18\x08 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x43\n\x0e\x46\x66tOverlapMode\x18\t \x01(\x0e\x32+.multi_site_instr.RFmxNRMXAcpFftOverlapMode\x12\x39\n\tFftWindow\x18\n \x01(\x0e\x32&.multi_site_instr.RFmxNRMXAcpFftWindow\x12U\n\x17IFOutputPowerOffsetAuto\x18\x0b \x01(\x0e\x32\x34.multi_site_instr.RFmxNRMXAcpIFOutputPowerOffsetAuto\x12\x36\n\x12MeasurementEnabled\x18\x0c \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12I\n\x11MeasurementMethod\x18\r \x01(\x0e\x32..multi_site_instr.RFmxNRMXAcpMeasurementMethod\x12\x45\n\x0fMeasurementMode\x18\x0e \x01(\x0e\x32,.multi_site_instr.RFmxNRMXAcpMeasurementMode\x12=\n\x17NearIFOutputPowerOffset\x18\x0f \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x61\n\x1dNoiseCalibrationAveragingAuto\x18\x10 \x01(\x0e\x32:.multi_site_instr.RFmxNRMXAcpNoiseCalibrationAveragingAuto\x12\x43\n\x1eNoiseCalibrationAveragingCount\x18\x11 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12O\n\x14NoiseCalibrationMode\x18\x12 \x01(\x0e\x32\x31.multi_site_instr.RFmxNRMXAcpNoiseCalibrationMode\x12W\n\x18NoiseCompensationEnabled\x18\x13 \x01(\x0e\x32\x35.multi_site_instr.RFmxNRMXAcpNoiseCompensationEnabled\x12Q\n\x15NoiseCompensationType\x18\x14 \x01(\x0e\x32\x32.multi_site_instr.RFmxNRMXAcpNoiseCompensationType\x12<\n\x17NumberOfAnalysisThreads\x18\x15 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12;\n\nPowerUnits\x18\x16 \x01(\x0e\x32\'.multi_site_instr.RFmxNRMXAcpPowerUnits\x12M\n\x16RbwFilterAutoBandwidth\x18\x17 \x01(\x0e\x32-.multi_site_instr.RFmxNRMXAcpRbwAutoBandwidth\x12\x38\n\x12RbwFilterBandwidth\x18\x18 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x41\n\rRbwFilterType\x18\x19 \x01(\x0e\x32*.multi_site_instr.RFmxNRMXAcpRbwFilterType\x12\x36\n\x11SequentialFftSize\x18\x1a \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12\x41\n\rSweepTimeAuto\x18\x1b \x01(\x0e\x32*.multi_site_instr.RFmxNRMXAcpSweepTimeAuto\x12\x37\n\x11SweepTimeInterval\x18\x1c \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x34\n\x0b\x41\x63pSubBlock\x18\x1d \x03(\x0b\x32\x1f.multi_site_instr.NrAcpSubBlock*r\n\"RFmxNRMXAcpAmplitudeCorrectionType\x12\x1d\n\x19RFCenterFrequency_010ifrq\x10\x00\x12 \n\x1cSpectrumFrequencyBin_010gogt\x10\x01\x12\x0b\n\x06hggaed\x10\xf4\x03*O\n\x1bRFmxNRMXAcpAveragingEnabled\x12\x11\n\rFalse_010rtgt\x10\x00\x12\x10\n\x0cTrue_010srnv\x10\x01\x12\x0b\n\x06qdpwwj\x10\xf4\x03*\x87\x01\n\x18RFmxNRMXAcpAveragingType\x12\x0f\n\x0bRms_010qrfm\x10\x00\x12\x0f\n\x0bLog_010mxfg\x10\x01\x12\x12\n\x0eScalar_010gurc\x10\x02\x12\x13\n\x0fMaximum_010viot\x10\x03\x12\x13\n\x0fMinimum_010uzlg\x10\x04\x12\x0b\n\x06ilxujp\x10\xf4\x03*o\n#RFmxNRMXAcpChannelConfigurationType\x12\x14\n\x10Standard_010emoo\x10\x00\x12\x12\n\x0e\x43ustom_010bksx\x10\x01\x12\x11\n\rNS_29_010dpbu\x10\x02\x12\x0b\n\x06nhxkml\x10\xf4\x03*n\n\x19RFmxNRMXAcpFftOverlapMode\x12\x14\n\x10\x44isabled_010bqwf\x10\x00\x12\x15\n\x11\x41utomatic_010gxip\x10\x01\x12\x17\n\x13UserDefined_010kqae\x10\x02\x12\x0b\n\x06ukcxss\x10\xf4\x03*\xd6\x01\n\x14RFmxNRMXAcpFftWindow\x12\x10\n\x0cNone_010sssh\x10\x00\x12\x13\n\x0f\x46latTop_010kyez\x10\x01\x12\x13\n\x0fHanning_010rzle\x10\x02\x12\x13\n\x0fHamming_010iyym\x10\x03\x12\x14\n\x10Gaussian_010tstz\x10\x04\x12\x14\n\x10\x42lackman_010gqfl\x10\x05\x12\x1a\n\x16\x42lackmanHarris_010zcwy\x10\x06\x12\x18\n\x14KaiserBessel_010vqrq\x10\x07\x12\x0b\n\x06ofsusu\x10\xf4\x03*V\n\"RFmxNRMXAcpIFOutputPowerOffsetAuto\x12\x11\n\rFalse_010gyag\x10\x00\x12\x10\n\x0cTrue_010gieg\x10\x01\x12\x0b\n\x06hcgirk\x10\xf4\x03*t\n\x1cRFmxNRMXAcpMeasurementMethod\x12\x12\n\x0eNormal_010etmb\x10\x00\x12\x18\n\x14\x44ynamicRange_010mhhh\x10\x01\x12\x19\n\x15SequentialFft_010bfea\x10\x02\x12\x0b\n\x06hupcfd\x10\xf4\x03*_\n\x1aRFmxNRMXAcpMeasurementMode\x12\x13\n\x0fMeasure_010tzmu\x10\x00\x12\x1f\n\x1b\x43\x61librateNoiseFloor_010yzkw\x10\x01\x12\x0b\n\x06gtutsn\x10\xf4\x03*\\\n(RFmxNRMXAcpNoiseCalibrationAveragingAuto\x12\x11\n\rFalse_010zhmv\x10\x00\x12\x10\n\x0cTrue_010tqhl\x10\x01\x12\x0b\n\x06mywucf\x10\xf4\x03*T\n\x1fRFmxNRMXAcpNoiseCalibrationMode\x12\x12\n\x0eManual_010bjqf\x10\x00\x12\x10\n\x0c\x41uto_010wcos\x10\x01\x12\x0b\n\x06xjumrq\x10\xf4\x03*W\n#RFmxNRMXAcpNoiseCompensationEnabled\x12\x11\n\rFalse_010aonh\x10\x00\x12\x10\n\x0cTrue_010nrba\x10\x01\x12\x0b\n\x06iujpvh\x10\xf4\x03*m\n RFmxNRMXAcpNoiseCompensationType\x12\"\n\x1e\x41nalyzerAndTermination_010moxd\x10\x00\x12\x18\n\x14\x41nalyzerOnly_010wevx\x10\x01\x12\x0b\n\x06\x64pxqyh\x10\xf4\x03*J\n\x15RFmxNRMXAcpPowerUnits\x12\x0f\n\x0b\x64\x42m_010kdag\x10\x00\x12\x13\n\x0f\x64\x42mByHz_010yrky\x10\x01\x12\x0b\n\x06lohlea\x10\xf4\x03*O\n\x1bRFmxNRMXAcpRbwAutoBandwidth\x12\x11\n\rFalse_010bvvh\x10\x00\x12\x10\n\x0cTrue_010ghfi\x10\x01\x12\x0b\n\x06lrqmud\x10\xf4\x03*e\n\x18RFmxNRMXAcpRbwFilterType\x12\x14\n\x10\x46\x66tBased_010kxkw\x10\x00\x12\x14\n\x10Gaussian_010ttpe\x10\x01\x12\x10\n\x0c\x46lat_010ucre\x10\x02\x12\x0b\n\x06wodivl\x10\xf4\x03*L\n\x18RFmxNRMXAcpSweepTimeAuto\x12\x11\n\rFalse_010auvh\x10\x00\x12\x10\n\x0cTrue_010tpjq\x10\x01\x12\x0b\n\x06\x63\x62rjql\x10\xf4\x03\x42\x12\xaa\x02\x0fOranAptRuClientb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'RfmxNrAcp_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\252\002\017OranAptRuClient'
  _RFMXNRMXACPAMPLITUDECORRECTIONTYPE._serialized_start=2101
  _RFMXNRMXACPAMPLITUDECORRECTIONTYPE._serialized_end=2215
  _RFMXNRMXACPAVERAGINGENABLED._serialized_start=2217
  _RFMXNRMXACPAVERAGINGENABLED._serialized_end=2296
  _RFMXNRMXACPAVERAGINGTYPE._serialized_start=2299
  _RFMXNRMXACPAVERAGINGTYPE._serialized_end=2434
  _RFMXNRMXACPCHANNELCONFIGURATIONTYPE._serialized_start=2436
  _RFMXNRMXACPCHANNELCONFIGURATIONTYPE._serialized_end=2547
  _RFMXNRMXACPFFTOVERLAPMODE._serialized_start=2549
  _RFMXNRMXACPFFTOVERLAPMODE._serialized_end=2659
  _RFMXNRMXACPFFTWINDOW._serialized_start=2662
  _RFMXNRMXACPFFTWINDOW._serialized_end=2876
  _RFMXNRMXACPIFOUTPUTPOWEROFFSETAUTO._serialized_start=2878
  _RFMXNRMXACPIFOUTPUTPOWEROFFSETAUTO._serialized_end=2964
  _RFMXNRMXACPMEASUREMENTMETHOD._serialized_start=2966
  _RFMXNRMXACPMEASUREMENTMETHOD._serialized_end=3082
  _RFMXNRMXACPMEASUREMENTMODE._serialized_start=3084
  _RFMXNRMXACPMEASUREMENTMODE._serialized_end=3179
  _RFMXNRMXACPNOISECALIBRATIONAVERAGINGAUTO._serialized_start=3181
  _RFMXNRMXACPNOISECALIBRATIONAVERAGINGAUTO._serialized_end=3273
  _RFMXNRMXACPNOISECALIBRATIONMODE._serialized_start=3275
  _RFMXNRMXACPNOISECALIBRATIONMODE._serialized_end=3359
  _RFMXNRMXACPNOISECOMPENSATIONENABLED._serialized_start=3361
  _RFMXNRMXACPNOISECOMPENSATIONENABLED._serialized_end=3448
  _RFMXNRMXACPNOISECOMPENSATIONTYPE._serialized_start=3450
  _RFMXNRMXACPNOISECOMPENSATIONTYPE._serialized_end=3559
  _RFMXNRMXACPPOWERUNITS._serialized_start=3561
  _RFMXNRMXACPPOWERUNITS._serialized_end=3635
  _RFMXNRMXACPRBWAUTOBANDWIDTH._serialized_start=3637
  _RFMXNRMXACPRBWAUTOBANDWIDTH._serialized_end=3716
  _RFMXNRMXACPRBWFILTERTYPE._serialized_start=3718
  _RFMXNRMXACPRBWFILTERTYPE._serialized_end=3819
  _RFMXNRMXACPSWEEPTIMEAUTO._serialized_start=3821
  _RFMXNRMXACPSWEEPTIMEAUTO._serialized_end=3897
  _NRACP._serialized_start=95
  _NRACP._serialized_end=2099
# @@protoc_insertion_point(module_scope)
