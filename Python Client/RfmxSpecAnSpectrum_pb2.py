# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: RfmxSpecAnSpectrum.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18RfmxSpecAnSpectrum.proto\x12\x10multi_site_instr\x1a\x1egoogle/protobuf/wrappers.proto\"\xea\x0f\n\x0eSpecAnSpectrum\x12^\n\x17\x41mplitudeCorrectionType\x18\x01 \x01(\x0e\x32=.multi_site_instr.RFmxSpecAnMXSpectrumAmplitudeCorrectionType\x12J\n\rAnalysisInput\x18\x02 \x01(\x0e\x32\x33.multi_site_instr.RFmxSpecAnMXSpectrumAnalysisInput\x12\x33\n\x0e\x41veragingCount\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12P\n\x10\x41veragingEnabled\x18\x04 \x01(\x0e\x32\x36.multi_site_instr.RFmxSpecAnMXSpectrumAveragingEnabled\x12J\n\rAveragingType\x18\x05 \x01(\x0e\x32\x33.multi_site_instr.RFmxSpecAnMXSpectrumAveragingType\x12\x33\n\x0e\x44\x65tectorPoints\x18\x06 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12H\n\x0c\x44\x65tectorType\x18\x07 \x01(\x0e\x32\x32.multi_site_instr.RFmxSpecAnMXSpectrumDetectorType\x12\x30\n\nFftPadding\x18\x08 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x42\n\tFftWindow\x18\t \x01(\x0e\x32/.multi_site_instr.RFmxSpecAnMXSpectrumFftWindow\x12\x36\n\x12MeasurementEnabled\x18\n \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12N\n\x0fMeasurementMode\x18\x0b \x01(\x0e\x32\x35.multi_site_instr.RFmxSpecAnMXSpectrumMeasurementMode\x12j\n\x1dNoiseCalibrationAveragingAuto\x18\x0c \x01(\x0e\x32\x43.multi_site_instr.RFmxSpecAnMXSpectrumNoiseCalibrationAveragingAuto\x12\x43\n\x1eNoiseCalibrationAveragingCount\x18\r \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12X\n\x14NoiseCalibrationMode\x18\x0e \x01(\x0e\x32:.multi_site_instr.RFmxSpecAnMXSpectrumNoiseCalibrationMode\x12`\n\x18NoiseCompensationEnabled\x18\x0f \x01(\x0e\x32>.multi_site_instr.RFmxSpecAnMXSpectrumNoiseCompensationEnabled\x12Z\n\x15NoiseCompensationType\x18\x10 \x01(\x0e\x32;.multi_site_instr.RFmxSpecAnMXSpectrumNoiseCompensationType\x12<\n\x17NumberOfAnalysisThreads\x18\x11 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12\x44\n\nPowerUnits\x18\x12 \x01(\x0e\x32\x30.multi_site_instr.RFmxSpecAnMXSpectrumPowerUnits\x12V\n\x16RbwFilterAutoBandwidth\x18\x13 \x01(\x0e\x32\x36.multi_site_instr.RFmxSpecAnMXSpectrumRbwAutoBandwidth\x12\x38\n\x12RbwFilterBandwidth\x18\x14 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12h\n\x1cRbwFilterBandwidthDefinition\x18\x15 \x01(\x0e\x32\x42.multi_site_instr.RFmxSpecAnMXSpectrumRbwFilterBandwidthDefinition\x12J\n\rRbwFilterType\x18\x16 \x01(\x0e\x32\x33.multi_site_instr.RFmxSpecAnMXSpectrumRbwFilterType\x12*\n\x04Span\x18\x17 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12J\n\rSweepTimeAuto\x18\x18 \x01(\x0e\x32\x33.multi_site_instr.RFmxSpecAnMXSpectrumSweepTimeAuto\x12\x37\n\x11SweepTimeInterval\x18\x19 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\\\n\x16VbwFilterAutoBandwidth\x18\x1a \x01(\x0e\x32<.multi_site_instr.RFmxSpecAnMXSpectrumVbwFilterAutoBandwidth\x12\x38\n\x12VbwFilterBandwidth\x18\x1b \x01(\x0b\x32\x1c.google.protobuf.DoubleValue*{\n+RFmxSpecAnMXSpectrumAmplitudeCorrectionType\x12\x1d\n\x19RFCenterFrequency_010jgbt\x10\x00\x12 \n\x1cSpectrumFrequencyBin_010fnir\x10\x01\x12\x0b\n\x06\x64voyar\x10\xf4\x03*f\n!RFmxSpecAnMXSpectrumAnalysisInput\x12\x0e\n\nIQ_010pqcf\x10\x00\x12\x11\n\rIOnly_010tgbm\x10\x01\x12\x11\n\rQOnly_010wmfd\x10\x02\x12\x0b\n\x06xmpbqr\x10\xf4\x03*X\n$RFmxSpecAnMXSpectrumAveragingEnabled\x12\x11\n\rFalse_010upgu\x10\x00\x12\x10\n\x0cTrue_010ffdg\x10\x01\x12\x0b\n\x06myniml\x10\xf4\x03*\x90\x01\n!RFmxSpecAnMXSpectrumAveragingType\x12\x0f\n\x0bRms_010vise\x10\x00\x12\x0f\n\x0bLog_010btrs\x10\x01\x12\x12\n\x0eScalar_010dxkp\x10\x02\x12\x13\n\x0fMaximum_010obpv\x10\x03\x12\x13\n\x0fMinimum_010bbew\x10\x04\x12\x0b\n\x06\x64klvlx\x10\xf4\x03*\xe1\x01\n RFmxSpecAnMXSpectrumDetectorType\x12\x10\n\x0cNone_010cmtd\x10\x00\x12\x12\n\x0eSample_010zozt\x10\x01\x12\x12\n\x0eNormal_010hpuk\x10\x02\x12\x10\n\x0cPeak_010zwac\x10\x03\x12\x18\n\x14NegativePeak_010mjkq\x10\x04\x12\x16\n\x12\x41verageRms_010rbqq\x10\x05\x12\x1a\n\x16\x41verageVoltage_010wldq\x10\x06\x12\x16\n\x12\x41verageLog_010hlww\x10\x07\x12\x0b\n\x06tereyz\x10\xf4\x03*\xdf\x01\n\x1dRFmxSpecAnMXSpectrumFftWindow\x12\x10\n\x0cNone_010xvpu\x10\x00\x12\x13\n\x0f\x46latTop_010uaar\x10\x01\x12\x13\n\x0fHanning_010civa\x10\x02\x12\x13\n\x0fHamming_010ybkv\x10\x03\x12\x14\n\x10Gaussian_010fbvc\x10\x04\x12\x14\n\x10\x42lackman_010hokj\x10\x05\x12\x1a\n\x16\x42lackmanHarris_010mwsx\x10\x06\x12\x18\n\x14KaiserBessel_010qufv\x10\x07\x12\x0b\n\x06\x64mmoaw\x10\xf4\x03*h\n#RFmxSpecAnMXSpectrumMeasurementMode\x12\x13\n\x0fMeasure_010hqqe\x10\x00\x12\x1f\n\x1b\x43\x61librateNoiseFloor_010jvuh\x10\x01\x12\x0b\n\x06mvmyyp\x10\xf4\x03*e\n1RFmxSpecAnMXSpectrumNoiseCalibrationAveragingAuto\x12\x11\n\rFalse_010jvsi\x10\x00\x12\x10\n\x0cTrue_010lfix\x10\x01\x12\x0b\n\x06hdahcz\x10\xf4\x03*]\n(RFmxSpecAnMXSpectrumNoiseCalibrationMode\x12\x12\n\x0eManual_010xmpw\x10\x00\x12\x10\n\x0c\x41uto_010ujuf\x10\x01\x12\x0b\n\x06mcfpoe\x10\xf4\x03*`\n,RFmxSpecAnMXSpectrumNoiseCompensationEnabled\x12\x11\n\rFalse_010kxls\x10\x00\x12\x10\n\x0cTrue_010wpmh\x10\x01\x12\x0b\n\x06tdduoj\x10\xf4\x03*v\n)RFmxSpecAnMXSpectrumNoiseCompensationType\x12\"\n\x1e\x41nalyzerAndTermination_010jneb\x10\x00\x12\x18\n\x14\x41nalyzerOnly_010sujz\x10\x01\x12\x0b\n\x06gqepve\x10\xf4\x03*\xdd\x01\n\x1eRFmxSpecAnMXSpectrumPowerUnits\x12\x0f\n\x0b\x64\x42m_010jqdv\x10\x00\x12\x17\n\x13\x64\x42mPerHertz_010rdnj\x10\x01\x12\x0f\n\x0b\x64\x42W_010riln\x10\x02\x12\x0f\n\x0b\x64\x42V_010mptl\x10\x03\x12\x10\n\x0c\x64\x42mV_010szuk\x10\x04\x12\x10\n\x0c\x64\x42uV_010vzxd\x10\x05\x12\x11\n\rWatts_010xuvk\x10\x06\x12\x11\n\rVolts_010qvng\x10\x07\x12\x18\n\x14VoltsSquared_010tiyc\x10\x08\x12\x0b\n\x06\x61idlwz\x10\xf4\x03*X\n$RFmxSpecAnMXSpectrumRbwAutoBandwidth\x12\x11\n\rFalse_010vvqf\x10\x00\x12\x10\n\x0cTrue_010hugv\x10\x01\x12\x0b\n\x06xevlij\x10\xf4\x03*\xd5\x01\n0RFmxSpecAnMXSpectrumRbwFilterBandwidthDefinition\x12\"\n\x1e\x42\x61ndwidthDefinition3dB_010szyw\x10\x00\x12\"\n\x1e\x42\x61ndwidthDefinition6dB_010hcsw\x10\x01\x12\'\n#BandwidthDefinitionBinWidth_010uetd\x10\x02\x12#\n\x1f\x42\x61ndwidthDefinitionEnbw_010rqlk\x10\x03\x12\x0b\n\x06vioveb\x10\xf4\x03*n\n!RFmxSpecAnMXSpectrumRbwFilterType\x12\x14\n\x10\x46\x66tBased_010msmb\x10\x00\x12\x14\n\x10Gaussian_010evxj\x10\x01\x12\x10\n\x0c\x46lat_010kiao\x10\x02\x12\x0b\n\x06kajgdt\x10\xf4\x03*U\n!RFmxSpecAnMXSpectrumSweepTimeAuto\x12\x11\n\rFalse_010gybl\x10\x00\x12\x10\n\x0cTrue_010ldcp\x10\x01\x12\x0b\n\x06jnjmxm\x10\xf4\x03*^\n*RFmxSpecAnMXSpectrumVbwFilterAutoBandwidth\x12\x11\n\rFalse_010fqmg\x10\x00\x12\x10\n\x0cTrue_010kgyx\x10\x01\x12\x0b\n\x06zluldc\x10\xf4\x03\x42\x12\xaa\x02\x0fOranAptRuClientb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'RfmxSpecAnSpectrum_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\252\002\017OranAptRuClient'
  _RFMXSPECANMXSPECTRUMAMPLITUDECORRECTIONTYPE._serialized_start=2107
  _RFMXSPECANMXSPECTRUMAMPLITUDECORRECTIONTYPE._serialized_end=2230
  _RFMXSPECANMXSPECTRUMANALYSISINPUT._serialized_start=2232
  _RFMXSPECANMXSPECTRUMANALYSISINPUT._serialized_end=2334
  _RFMXSPECANMXSPECTRUMAVERAGINGENABLED._serialized_start=2336
  _RFMXSPECANMXSPECTRUMAVERAGINGENABLED._serialized_end=2424
  _RFMXSPECANMXSPECTRUMAVERAGINGTYPE._serialized_start=2427
  _RFMXSPECANMXSPECTRUMAVERAGINGTYPE._serialized_end=2571
  _RFMXSPECANMXSPECTRUMDETECTORTYPE._serialized_start=2574
  _RFMXSPECANMXSPECTRUMDETECTORTYPE._serialized_end=2799
  _RFMXSPECANMXSPECTRUMFFTWINDOW._serialized_start=2802
  _RFMXSPECANMXSPECTRUMFFTWINDOW._serialized_end=3025
  _RFMXSPECANMXSPECTRUMMEASUREMENTMODE._serialized_start=3027
  _RFMXSPECANMXSPECTRUMMEASUREMENTMODE._serialized_end=3131
  _RFMXSPECANMXSPECTRUMNOISECALIBRATIONAVERAGINGAUTO._serialized_start=3133
  _RFMXSPECANMXSPECTRUMNOISECALIBRATIONAVERAGINGAUTO._serialized_end=3234
  _RFMXSPECANMXSPECTRUMNOISECALIBRATIONMODE._serialized_start=3236
  _RFMXSPECANMXSPECTRUMNOISECALIBRATIONMODE._serialized_end=3329
  _RFMXSPECANMXSPECTRUMNOISECOMPENSATIONENABLED._serialized_start=3331
  _RFMXSPECANMXSPECTRUMNOISECOMPENSATIONENABLED._serialized_end=3427
  _RFMXSPECANMXSPECTRUMNOISECOMPENSATIONTYPE._serialized_start=3429
  _RFMXSPECANMXSPECTRUMNOISECOMPENSATIONTYPE._serialized_end=3547
  _RFMXSPECANMXSPECTRUMPOWERUNITS._serialized_start=3550
  _RFMXSPECANMXSPECTRUMPOWERUNITS._serialized_end=3771
  _RFMXSPECANMXSPECTRUMRBWAUTOBANDWIDTH._serialized_start=3773
  _RFMXSPECANMXSPECTRUMRBWAUTOBANDWIDTH._serialized_end=3861
  _RFMXSPECANMXSPECTRUMRBWFILTERBANDWIDTHDEFINITION._serialized_start=3864
  _RFMXSPECANMXSPECTRUMRBWFILTERBANDWIDTHDEFINITION._serialized_end=4077
  _RFMXSPECANMXSPECTRUMRBWFILTERTYPE._serialized_start=4079
  _RFMXSPECANMXSPECTRUMRBWFILTERTYPE._serialized_end=4189
  _RFMXSPECANMXSPECTRUMSWEEPTIMEAUTO._serialized_start=4191
  _RFMXSPECANMXSPECTRUMSWEEPTIMEAUTO._serialized_end=4276
  _RFMXSPECANMXSPECTRUMVBWFILTERAUTOBANDWIDTH._serialized_start=4278
  _RFMXSPECANMXSPECTRUMVBWFILTERAUTOBANDWIDTH._serialized_end=4372
  _SPECANSPECTRUM._serialized_start=79
  _SPECANSPECTRUM._serialized_end=2105
# @@protoc_insertion_point(module_scope)
